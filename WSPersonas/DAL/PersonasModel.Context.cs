//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WSPersonas.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbTestPersonaEntities : DbContext
    {
        public dbTestPersonaEntities()
            : base("name=dbTestPersonaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Persona> Persona { get; set; }
    
        public virtual int Persona_Delete(Nullable<int> idPersona)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Persona_Delete", idPersonaParameter);
        }
    
        public virtual int Persona_Exists(Nullable<int> idPersona, ObjectParameter exists)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Persona_Exists", idPersonaParameter, exists);
        }
    
        public virtual int Persona_Insert(Nullable<int> idPersona, string nombre, string direccion, byte[] imagen, Nullable<System.DateTime> nacimiento, string telefono, string email)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            var nacimientoParameter = nacimiento.HasValue ?
                new ObjectParameter("nacimiento", nacimiento) :
                new ObjectParameter("nacimiento", typeof(System.DateTime));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Persona_Insert", idPersonaParameter, nombreParameter, direccionParameter, imagenParameter, nacimientoParameter, telefonoParameter, emailParameter);
        }
    
        public virtual ObjectResult<Persona_Listar_Result> Persona_Listar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Persona_Listar_Result>("Persona_Listar");
        }
    
        public virtual ObjectResult<Persona_Select_Result> Persona_Select(Nullable<int> idPersona)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Persona_Select_Result>("Persona_Select", idPersonaParameter);
        }
    
        public virtual int Persona_Update(Nullable<int> idPersona, string nombre, string direccion, byte[] imagen, Nullable<System.DateTime> nacimiento, string telefono, string email)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("imagen", imagen) :
                new ObjectParameter("imagen", typeof(byte[]));
    
            var nacimientoParameter = nacimiento.HasValue ?
                new ObjectParameter("nacimiento", nacimiento) :
                new ObjectParameter("nacimiento", typeof(System.DateTime));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Persona_Update", idPersonaParameter, nombreParameter, direccionParameter, imagenParameter, nacimientoParameter, telefonoParameter, emailParameter);
        }
    
        public virtual int select_max_id_persona(ObjectParameter idPersona)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("select_max_id_persona", idPersona);
        }
    
        public virtual int sp_generate(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_generate", tableNameParameter);
        }
    }
}
